/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.icv.timeselector.smart;

import it.cnr.istc.icv.logic.ICVAnnotation;
import it.cnr.istc.icv.timeselector.ProDateSelector;
import java.beans.Beans;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Luca
 */
public class CompactSmartTS extends javax.swing.JPanel implements PropertyChangeListener, SmartIntervalListener {

    /**
     * Creates new form CompactSmartTS
     */
    public CompactSmartTS() {
        initComponents();
        this.proDateSelector_From.setIdentifier(ProDateSelector.RANGE_TYPE.FROM);
        this.proDateSelector_To.setIdentifier(ProDateSelector.RANGE_TYPE.TO);
        if (!Beans.isDesignTime()) {
            this.proDateSelector_From.addPropertySupportListener(this);
            this.proDateSelector_To.addPropertySupportListener(this);
            this.droppableSmartTimeSelector1.addSmartIntervalListener(this);
        }
        Date endDate = new Date();
        Date startDate = new Date(endDate.getTime() - 1000l * 60 * 60 * 24 * 7);

        proDateSelector_From.setDate(startDate);
        proDateSelector_To.setDate(endDate);

        this.droppableSmartTimeSelector1.setStartRange(startDate.getTime());
        this.droppableSmartTimeSelector1.setEndRange(new Date().getTime());
        this.droppableSmartTimeSelector1.initRedZone();
        this.droppableSmartTimeSelector1.setNightVisible(true);
//         SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
////         Date ssss = new Date(startDate.getTime() + ((endDate.getTime()-startDate.getTime()) / 4));
////        this.jLabel_From.setText(format.format(ssss));
//         this.jLabel_From.setText(format.format(this.droppableSmartTimeSelector1.getStartSquare()));
//        this.jLabel_To.setText(format.format(this.droppableSmartTimeSelector1.getEndDataSelection()));

    }
    
    public void addPropertyChangeListenerToDS(PropertyChangeListener listener) {
        this.proDateSelector_From.addPropertySupportListener(listener);
        this.proDateSelector_To.addPropertySupportListener(listener);
    }
    
    public Date getStartRange(){
        return new Date(this.droppableSmartTimeSelector1.getStartRange());
    }
    
    public Date getEndRange(){
        return new Date(this.droppableSmartTimeSelector1.getEndRange());
    }
    
    public Date getStartInterval(){
        return this.droppableSmartTimeSelector1.getStartSquare();
    }
    
    public Date getEndInterval(){
        return this.droppableSmartTimeSelector1.getEndSquare();
    }
        
    
    public void addICVAnnotation(ICVAnnotation ann){
        this.droppableSmartTimeSelector1.addICVAnnotation(ann);
    }

    public void setStartIntervalWord(String startWord) {
        this.droppableSmartTimeSelector1.setStartIntervalWord(startWord);
    }

    public void setEndIntervalWord(String endWord) {
        this.droppableSmartTimeSelector1.setEndIntervalWord(endWord);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proDateSelector_From = new it.cnr.istc.icv.timeselector.ProDateSelector();
        proDateSelector_To = new it.cnr.istc.icv.timeselector.ProDateSelector();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel_From = new javax.swing.JLabel();
        jLabel_To = new javax.swing.JLabel();
        droppableSmartTimeSelector1 = new it.cnr.istc.icv.timeselector.smart.DroppableSmartTimeSelector();

        setBackground(new java.awt.Color(255, 255, 255));

        proDateSelector_From.setBorder(javax.swing.BorderFactory.createTitledBorder("Main view from:"));

        proDateSelector_To.setBorder(javax.swing.BorderFactory.createTitledBorder("Main view to:"));

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/cnr/istc/icv/icons/moond32.png"))); // NOI18N
        jToggleButton1.setSelected(true);
        jToggleButton1.setText("Night View");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/cnr/istc/icv/icons/resize-horizontal-32.png"))); // NOI18N
        jButton1.setText("Select All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Selected Interval starts at: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Selected Interval ends at: ");

        jLabel_From.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_From.setForeground(new java.awt.Color(255, 0, 51));
        jLabel_From.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_From.setText("data 1");

        jLabel_To.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_To.setForeground(new java.awt.Color(255, 0, 51));
        jLabel_To.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_To.setText("data 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_To, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_From, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(proDateSelector_From, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(droppableSmartTimeSelector1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proDateSelector_To, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jLabel1)
                    .addComponent(jLabel_From))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel_To)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proDateSelector_From, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(proDateSelector_To, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(droppableSmartTimeSelector1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        this.droppableSmartTimeSelector1.setNightVisible(jToggleButton1.isSelected());
        this.droppableSmartTimeSelector1.repaint();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.droppableSmartTimeSelector1.selectAll();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private it.cnr.istc.icv.timeselector.smart.DroppableSmartTimeSelector droppableSmartTimeSelector1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_From;
    private javax.swing.JLabel jLabel_To;
    private javax.swing.JToggleButton jToggleButton1;
    private it.cnr.istc.icv.timeselector.ProDateSelector proDateSelector_From;
    private it.cnr.istc.icv.timeselector.ProDateSelector proDateSelector_To;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(ProDateSelector.DATA_CHANGED)) {
            if (((ProDateSelector.RANGE_TYPE) evt.getOldValue()) == ProDateSelector.RANGE_TYPE.FROM) {
                this.droppableSmartTimeSelector1.setStartRange(((Calendar) evt.getNewValue()).getTime().getTime());
            } else if (((ProDateSelector.RANGE_TYPE) evt.getOldValue()) == ProDateSelector.RANGE_TYPE.TO) {
                this.droppableSmartTimeSelector1.setEndRange(((Calendar) evt.getNewValue()).getTime().getTime());
            }
            this.droppableSmartTimeSelector1.repaint();
        }
    }

    @Override
    public void currentSquare(Date start, Date end) {
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
//         Date ssss = new Date(startDate.getTime() + ((endDate.getTime()-startDate.getTime()) / 4));
//        this.jLabel_From.setText(format.format(ssss));
        this.jLabel_From.setText(format.format(start));
        this.jLabel_To.setText(format.format(end));
    }

}
